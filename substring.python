class Solution(object):
    def findSubstring(self, s, words):
        if(len(words)==0):
            return []
        N = len(words[0])
        if(len(s) < N*len(words)):
            return []
        i=0;location=[]
        def recursion(firstWord,words,s,location,N):
            if not words:
                return location
            if(firstWord in set(words)):
                words.remove(firstWord)
                pos = recursion(s[location+N:location+2*N],words,s,location+N,N)
                if(pos == -1):
                    return -1
                else:
                    return location
            else:
                return -1
        while(i<len(s)):
            
            firstWord = s[i:i+N]
        
            pos = recursion(firstWord,words[:],s,i,N)
            
            if(pos!=-1):
                location.append(pos)
            i+=1
        return location
        """
        :type s: str
        :type words: List[str]
        :rtype: List[int]
        """
